---
apiVersion: v1
kind: Namespace
metadata:
  name: s3-orchestration
---
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: s3-orchestration
  name: s3-orchestration
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: s3-orchestration-app
  replicas: 2
  template:
    metadata:
      labels:
        app.kubernetes.io/name: s3-orchestration-app
    spec:
      containers:
      - image: yasirub/s3-orchestration:latest
        imagePullPolicy: Always
        env:
        - name: cluster_color
          value: "Blue"
        name: s3-orchestration-app
        ports:
        - containerPort: 8080
---
apiVersion: v1
kind: Service
metadata:
  namespace: s3-orchestration
  name: s3-orchestration-service
spec:
  ports:
    - port: 80
      targetPort: 8080
      protocol: TCP
  type: NodePort
  selector:
    app.kubernetes.io/name: s3-orchestration-app
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  namespace: s3-orchestration
  name: s3-orchestration-ingress
  annotations:
    alb.ingress.kubernetes.io/scheme: internal
    alb.ingress.kubernetes.io/target-type: ip
    alb.ingress.kubernetes.io/group.name: blue-alb-group
    alb.ingress.kubernetes.io/load-balancer-name: blue-alb
    #alb.ingress.kubernetes.io/subnets: subnet-011bf7846593749bf, subnet-06b3eb497e3f1a849

spec:
  ingressClassName: alb
  rules:
    - http:
        paths:
        - path: /
          pathType: Prefix
          backend:
            service:
              name: s3-orchestration-service
              port:
                number: 80

---
kind: ServiceExport
apiVersion: multicluster.x-k8s.io/v1alpha1
metadata:
  namespace: s3-orchestration
  name: s3-orchestration-service
---
apiVersion: about.k8s.io/v1alpha1
kind: ClusterProperty
metadata:
  name: cluster.clusterset.k8s.io
spec:
  value: "clouda-commerce-EKS-Blue"
---
apiVersion: about.k8s.io/v1alpha1
kind: ClusterProperty
metadata:
  name: clusterset.k8s.io
spec:
  value: "clouda-commerce-EKS-Set"
